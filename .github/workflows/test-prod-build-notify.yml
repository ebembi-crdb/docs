name: Test Fork Integrations

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  test-integrations:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get PR information
        id: pr-info
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          pr_num=${{ github.event.pull_request.number }}
          pr_title="${{ github.event.pull_request.title }}"
          pr_author="${{ github.event.pull_request.user.login }}"
          pr_url="${{ github.event.pull_request.html_url }}"
          
          echo "pr_number=$pr_num" >> $GITHUB_OUTPUT
          echo "pr_title=$pr_title" >> $GITHUB_OUTPUT
          echo "pr_author=$pr_author" >> $GITHUB_OUTPUT
          echo "pr_url=$pr_url" >> $GITHUB_OUTPUT
          
          # Get changed files count
          files_changed=$(gh pr view $pr_num --json files -q '.files | length')
          echo "files_changed=$files_changed" >> $GITHUB_OUTPUT
          
          echo "PR #$pr_num by $pr_author: $files_changed files changed"

      - name: Create GitHub Comment
        uses: actions/github-script@v7
        with:
          script: |
            const prInfo = {
              number: ${{ steps.pr-info.outputs.pr_number }},
              author: '${{ steps.pr-info.outputs.pr_author }}',
              title: '${{ steps.pr-info.outputs.pr_title }}',
              filesChanged: ${{ steps.pr-info.outputs.files_changed }},
              url: '${{ steps.pr-info.outputs.pr_url }}'
            };
            
            const commentBody = `
            ## ü§ñ Test Fork Integration
            
            **PR Information:**
            - **Number:** #${prInfo.number}
            - **Author:** @${prInfo.author}
            - **Title:** ${prInfo.title}
            - **Files Changed:** ${prInfo.filesChanged}
            - **Repository:** ${{ github.repository }}
            - **Branch:** ${{ github.head_ref }}
            
            **Test Results:**
            ‚úÖ GitHub commenting integration working  
            ‚è≥ Slack notification test in progress...
            
            *This is a test comment from the fork integration workflow.*
            `;
            
            await github.rest.issues.createComment({
              issue_number: prInfo.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });

      - name: Send Slack Notification
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{
              "text": "üß™ Fork Integration Test",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Fork Integration Test* üß™\n\n*PR:* <${{ steps.pr-info.outputs.pr_url }}|#${{ steps.pr-info.outputs.pr_number }}>\n*Title:* ${{ steps.pr-info.outputs.pr_title }}\n*Author:* @${{ steps.pr-info.outputs.pr_author }}\n*Repository:* ${{ github.repository }}\n*Files Changed:* ${{ steps.pr-info.outputs.files_changed }}\n*Branch:* ${{ github.head_ref }} ‚Üí ${{ github.base_ref }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Test Status:*\n‚úÖ GitHub Comment: Success\n‚úÖ Slack Notification: Success"
                  }
                }
              ]
            }' \
            ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Update GitHub Comment with Results
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            // Find our test comment
            const comments = await github.rest.issues.listComments({
              issue_number: ${{ steps.pr-info.outputs.pr_number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            const testComment = comments.data.find(comment => 
              comment.body.includes('ü§ñ Test Fork Integration')
            );
            
            if (testComment) {
              const updatedBody = testComment.body.replace(
                '‚è≥ Slack notification test in progress...',
                '‚úÖ Slack notification test completed!'
              );
              
              await github.rest.issues.updateComment({
                comment_id: testComment.id,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: updatedBody
              });
            }

      - name: Test Summary
        run: |
          echo "üéâ Integration Test Complete!"
          echo "‚úÖ GitHub Token: Working (automatic)"
          echo "‚úÖ GitHub Comments: Working"
          echo "‚úÖ Slack Webhook: Working" 
          echo "üìç Repository: ${{ github.repository }}"
          echo "üìç PR: #${{ steps.pr-info.outputs.pr_number }}"
